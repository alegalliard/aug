<?phpclass Serialize{		public $_dir_register 	= 	'serialize/';	private $_data 			= 	array();	private $_session;	private $_isSession		= 	false;	private $_version 		=	'1.0.0';	private $namespace		= __file__;			function __construct($namespace=null,$session=FALSE)	{					$this->_isSession 		= (bool)$session;		$this->_dir_register 	= TMP_DIR.$this->_dir_register;				if($this->_isSession==false)		{			if(!is_dir($this->_dir_register))				if(!@mkdir($this->_dir_register,0777,true))					die('Warning: Directory register can not be created');		}else		{			$this->_session = new Session('serialize');		}				$this->namespace  = is_null($namespace)?$this->_session->id():$namespace;	}		function __set($k,$v)	{		$this->_data[$k] = $v;	}			function __get($k)	{		return $this->_data[$k];	}		function encode()	{		echo $this->_dir_register.'.'.md5($this->namespace).'.txt';		if($this->_isSession==true)		{			$this->_session[$this->namespace] = serialize($this->_data);			return true;		}		else		{						file_put_contents($this->_dir_register.'.'.md5($this->namespace).'.txt',serialize($this->_data),LOCK_EX);			return true;		}				return false;	}		function decode()	{		 		if($this->_isSession)			$this->_data = unserialize($this->_session[$this->namespace]);		else			$this->_data = unserialize(file_get_contents($this->_dir_register.'.'.md5($this->namespace)));	}		function destroy()	{		if($this->_isSession)			$this->_data = $this->session->destroy($this->namespace);		else			@unlink($this->_dir_register.'.'.md5($this->namespace));	}		}